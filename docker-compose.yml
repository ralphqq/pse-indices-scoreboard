version: "3.7"

services:
  app:
    build: .
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - SITENAME=app
    expose:
      - "8000"
    restart: unless-stopped
    command: ["./boot.sh", "gunicorn", "-b", ":8000", "--access-logfile", "-", "--error-logfile", "-", "pse_summary.wsgi:application"]

  db:
    image: postgres:10.5-alpine
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    env_file:
      - .env

  redis:
    image: "redis:alpine"

  celery-worker:
    build: .
    command: ["./boot.sh", "celery", "-A", "pse_summary", "worker", "-l", "INFO"]
    env_file:
      - .env
    environment:
      - DB_HOST=db
    depends_on:
      - redis
      - app
    restart: unless-stopped

  celery-beat:
    build: .
    command: ["./boot.sh", "celery", "-A", "pse_summary", "beat", "-l", "INFO"]
    env_file:
      - .env
    environment:
      - DB_HOST=db
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/app/static
    ports:
      - "80:80"
    restart: always

volumes:
  dbdata:
